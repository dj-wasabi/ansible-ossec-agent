---
# tasks file for ossec-agent

- name: "Install the correct repository"
  include_tasks: "{{ ansible_os_family }}.yml"
  when: (ossec_disable_public_repos is not defined) or (ossec_disable_public_repos != 'yes')

- name: "Install {{ ossec_agent_package_name }}"
  package:
    name: "{{ ossec_agent_package_name }}"
  when: "'.deb' not in ossec_agent_package_name"

- name: Install OSSEC Agent from .deb package
  apt: deb="{{ ossec_agent_package_name }}"
  when: "'.deb' in ossec_agent_package_name"

- name: Set ossec deploy facts for RedHat
  set_fact:
    ossec_agent_config_filename: ossec-agent.conf
    ossec_init_name: ossec-hids
  when: ansible_os_family == "RedHat"

- name: Set ossec deploy facts for Debian
  set_fact:
    ossec_agent_config_filename: ossec.conf
    ossec_init_name: ossec
  when: ansible_os_family == "Debian"

- name: "Installing the ossec-agent.conf"
  template:
    src: var-ossec-etc-ossec-agent.conf.j2
    dest: /var/ossec/etc/{{ ossec_agent_config_filename }}
    owner: root
    group: root
    mode: 0644
  notify: restart ossec-agent
  tags:
    - init
    - config

- name: "Check if client.keys exists"
  stat:
    path: /var/ossec/etc/client.keys
  register: check_keys
  tags:
    - config

- name: "Check if client.keys exists on ossec-server"
  stat:
    path: /var/ossec/etc/client.keys
  when: ossec_managed_server
  delegate_to: "{{ ossec_server_name }}"
  register: check_server_keys
  tags:
    - config

- name: "Starting auth daemon on server {{ ossec_server_name }}"
  service:
    name: ossec-authd
    state: started
  when: ossec_managed_server and not check_keys.stat.exists and ossec_server_name|default("") != ""
  delegate_to: "{{ ossec_server_name }}"
  run_once: true
  tags:
    - config

- name: "Pausing"
  pause:
    minutes: 2
    prompt: 'Please execute the following command on your ossec-server: "service ossec-authd start"'
  when: not ossec_managed_server and not check_keys.stat.exists or ossec_server_name|default("") == ""
  tags:
    - skip_ansible_lint

- name: "register client"
  shell: "/var/ossec/bin/agent-auth -m {{ ossec_server_ip|default(ossec_server_fqdn) }} -p 1515 -A '{{ ossec_agent_name|default(ansible_hostname) }}'"
  args:
    creates: /var/ossec/etc/client.keys
  tags:
    - config
    - skip_ansible_lint

- name: Set permissions on client.keys file
  file:
    dest: /var/ossec/etc/client.keys
    mode: 0640

- name: "kill the auth-daemon on server {{ ossec_server_name }}"
  service:
    name: ossec-authd
    state: stopped
  delegate_to: "{{ ossec_server_name }}"
  when: ossec_managed_server and not check_keys.stat.exists and ossec_server_name|default("") != ""
  run_once: true
  tags:
    - config

- name: "Pausing"
  pause:
    minutes: 2
    prompt: 'Please execute the following command on your ossec-server: "service ossec-authd stop"'
  when: not ossec_managed_server and not check_keys.stat.exists and ossec_server_name|default("") == ""

- name: "Restart ossec-remoted on server. If this is the first agent added it will not be running."
  shell: /var/ossec/bin/ossec-control restart
  delegate_to: "{{ ossec_server_name }}"
  when: ossec_managed_server and not check_server_keys.stat.exists and ossec_server_name|default("") != ""
  run_once: true
  tags:
    - skip_ansible_lint

- name: "Pausing"
  pause:
    minutes: 2
    prompt: 'Please execute the following command on your ossec-server: "/var/ossec/bin/ossec-control restart"'
  when: not ossec_managed_server and not check_server_keys.stat.exists and ossec_server_name|default("") == ""

- name: "Start ossec-agent if not already running"
  service:
    name: "{{ ossec_init_name }}"
    state: started
    enabled: yes
